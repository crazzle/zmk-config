/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    tapping-term-ms = <400>;
    flavor = "tap-preferred";
};

/ {

        combos {
                compatible = "zmk,combos";

                combo_esc {
                timeout-ms = <50>;
                key-positions = <1 2>;
                bindings = <&kp ESCAPE>;
                };

                combo_bksp {
                timeout-ms = <50>;
                key-positions = <10 9>;
                bindings = <&kp BACKSPACE>;
                };

                combo_tab {
                bindings = <&kp TAB>;
                key-positions = <13 14>;
                };

                combo_shift {
                bindings = <&kp LEFT_SHIFT>;
                key-positions = <25 26>;
                };

                combo_delete {
                bindings = <&kp SQT>;
                key-positions = <21 22>;
                };

                combo_ret {
                bindings = <&kp RET>;
                key-positions = <33 34>;
                };

        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &none    &lt 3 Q &kp W &kp E       &kp R         &kp T           &kp Y             &kp U       &kp I        &kp O   &kp P    &none
   &none    &kp A   &kp S &kp D       &kp F         &kp G           &kp H             &kp J       &kp K        &kp L   &kp SEMI &none
   &none    &kp Z   &kp X &kp C       &kp V         &kp B           &kp N             &kp M       &kp COMMA    &kp DOT &kp FSLH &none
                          &kp LCTRL   &kp LALT      &kp LGUI        &mt LSHIFT SPACE  &mo 2       &mo 1
                        >;
                };
                
                lower_layer {
                        bindings = <
   &none        &kp TAB   &none    &none    &none         &none       &none    &none    &none    &none     &kp BSPC   &none
   &none        &kp ESC   &none    &none    &none         &none       &kp LEFT &kp DOWN &kp UP   &kp RIGHT &kp SQT    &none
   &none        &none     &none    &none    &none         &none       &none    &none    &none    &none     &kp RET    &none
                                   &trans   &trans        &trans      &trans   &trans   &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  `   |
// | SHFT |  -  |  =  |  [  |  ]  |  \  |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans  &kp EXCL  &kp AT    &kp HASH   &kp DLLR   &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR &trans
   &trans  &kp N1    &kp N2    &kp N3     &kp N4     &kp N5      &kp N6    &kp N7    &kp N8          &kp N9    &kp N0   &kp GRAVE
   &trans  &kp MINUS &kp EQUAL &kp LBKT   &kp RBKT   &kp BSLH    &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC  &kp PIPE &kp TILDE
                    	       &trans     &trans     &trans      &trans    &trans    &trans
                        >;
                };

                adjustment_layer {
                        bindings = <
   &trans       &trans          &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3       &none    &none          &none              &none     &none &none
   &none        &none           &none           &none           &none           &none              &none    &kp C_VOL_DN   &kp C_VOL_UP       &none     &none &none
   &none        &none           &none           &none           &none           &none              &none    &none          &none              &none     &none &none
                                &bt BT_CLR      &none           &none                              &none    &none          &none
                        >;
                };
        };     
};
